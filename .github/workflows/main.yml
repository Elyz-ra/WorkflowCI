name: MLflow CI/CD Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-train:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.9
          miniconda-version: "latest"
          auto-activate-base: false
          channels: conda-forge,defaults

      - name: Check Env
        # Menjalankan ini di login shell untuk memastikan conda tersedia
        run: |
          python --version
          conda --version
          pip --version
        shell: bash -l {0} # PENTING: Gunakan login shell

      - name: Install dependencies (Conda Environment)
        run: |
          # Perbaikan path folder: MLProjects/conda.yaml
          conda env create -f MLProjects/conda.yaml
          # Menginstal mlflow di environment baru
          conda activate mlflow-ci-env
          pip install mlflow==1.23.0
        shell: bash -l {0} # PENTING: Gunakan login shell

      - name: Start MLflow Tracking Server (Local)
        run: |
          conda activate mlflow-ci-env
          mlflow ui --host 127.0.0.1 --port 5001 --backend-store-uri ./mlruns &
          sleep 5
          export MLFLOW_TRACKING_URI="http://127.0.0.1:5001"
        shell: bash -l {0} # PENTING: Gunakan login shell

      - name: Run MLflow Project
        run: |
          # Perintah ini akan menggunakan MLFLOW_TRACKING_URI yang sudah diexport di langkah sebelumnya
          # Perbaikan path folder: MLProjects
          conda activate mlflow-ci-env
          mlflow run MLProjects -e main
        shell: bash -l {0} # PENTING: Gunakan login shell

      - name: Get latest MLflow run_id
        id: get_run_id
        run: |
          LATEST_RUN_ID=$(ls -td mlruns/*/ | head -1 | xargs basename)
          echo "latest_run_id=$LATEST_RUN_ID" >> $GITHUB_OUTPUT
        shell: bash -l {0} # PENTING: Gunakan login shell

      - name: Save MLflow Run Data as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-run-artifacts-${{ github.run_id }}
          path: mlruns/${{ steps.get_run_id.outputs.latest_run_id }}/artifacts/
        # Tidak perlu shell: bash -l {0} karena ini action, bukan run script langsung

      - name: Build Docker Model
        run: |
          conda activate mlflow-ci-env
          mlflow models build-docker --model-uri "models:/ShippingDelayXGBoostModel/Production" -n shipping-delay-xgb-model:latest
        shell: bash -l {0} 

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        # Tidak perlu shell: bash -l {0} karena ini action, bukan run script langsung

      - name: Tag Docker Image
        run: |
          DOCKER_IMAGE_NAME="shipping-delay-xgb-model"
          DOCKER_REPO="${{ secrets.DOCKER_USERNAME }}/$DOCKER_IMAGE_NAME"
          docker tag $DOCKER_IMAGE_NAME:latest $DOCKER_REPO:latest
          docker tag $DOCKER_IMAGE_NAME:latest $DOCKER_REPO:${{ github.run_id }}
        shell: bash -l {0} # PENTING: Gunakan login shell

      - name: Push Docker Image
        run: |
          DOCKER_IMAGE_NAME="shipping-delay-xgb-model"
          DOCKER_REPO="${{ secrets.DOCKER_USERNAME }}/$DOCKER_IMAGE_NAME"
          docker push $DOCKER_REPO:latest
          docker push $DOCKER_REPO:${{ github.run_id }}
        shell: bash -l {0} # PENTING: Gunakan login shell
