name: MLflow CI/CD Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-train:
    runs-on: ubuntu-latest
    environment: Production
    env: # Global environment variables for this job
      PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python # Dipindahkan ke sini agar lebih global

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.9
          miniconda-version: "latest"
          auto-activate-base: false
          channels: conda-forge,defaults

      - name: Check Env
        run: |
          python --version
          conda --version
          pip --version
        shell: bash -l {0}

      - name: Install dependencies (Conda Environment)
        run: |
          conda env create -f MLProjects/conda.yaml
          conda activate mlflow-ci-env
          pip install mlflow==1.23.0
          pip install protobuf==3.20.3 --force-reinstall
          pip install sqlalchemy
        shell: bash -l {0}

      - name: Start MLflow Tracking Server (Local)
        run: |
          conda activate mlflow-ci-env
          # Start server dengan backend SQLite
          mlflow ui --host 127.0.0.1 --port 5001 --backend-store-uri sqlite:///mlruns.db --default-artifact-root ./mlruns &
          # PENTING: Beri waktu lebih banyak agar server sempat menyala dan siap menerima koneksi
          sleep 15 # Meningkatkan waktu tunggu dari 5 detik ke 15 detik
        shell: bash -l {0}

      - name: Run MLflow Project
        run: |
          conda activate mlflow-ci-env
          # modelling.py akan mengatur MLFLOW_TRACKING_URI secara programatis.
          # Kita tetap passing --experiment-name dari CLI.
          mlflow run MLProjects -e main --experiment-name "Shipping Delay Prediction"
        shell: bash -l {0}

      - name: Get latest MLflow run_id
        id: get_run_id
        run: |
          conda activate mlflow-ci-env
          # Pastikan MLFLOW_TRACKING_URI disetel untuk CLI.
          export MLFLOW_TRACKING_URI="http://127.0.0.1:5001"
          LATEST_RUN_ID=$(mlflow search runs --experiment-name "Shipping Delay Prediction" --max-results 1 --order-by "start_time DESC" --query "tags.mlflow.runName IS NOT NULL" --output-format json | jq -r '.[0].info.run_id')
          echo "latest_run_id=$LATEST_RUN_ID" >> $GITHUB_OUTPUT
        shell: bash -l {0}

      - name: Save MLflow Run Data as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-run-artifacts-${{ github.run_id }}
          path: mlruns/${{ steps.get_run_id.outputs.latest_run_id }}/artifacts/

      - name: Build Docker Model
        run: |
          conda activate mlflow-ci-env
          export MLFLOW_TRACKING_URI="http://127.0.0.1:5001"
          mlflow models build-docker --model-uri "models:/ShippingDelayXGBoostModel/Production" -n shipping-delay-xgb-model:latest
        shell: bash -l {0}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag Docker Image
        run: |
          DOCKER_IMAGE_NAME="shipping-delay-xgb-model"
          DOCKER_REPO="${{ secrets.DOCKER_USERNAME }}/$DOCKER_IMAGE_NAME"
          docker tag $DOCKER_IMAGE_NAME:latest $DOCKER_REPO:latest
          docker tag $DOCKER_IMAGE_NAME:latest $DOCKER_REPO:${{ github.run_id }}
        shell: bash -l {0}

      - name: Push Docker Image
        run: |
          DOCKER_IMAGE_NAME="shipping-delay-xgb-model"
          DOCKER_REPO="${{ secrets.DOCKER_USERNAME }}/$DOCKER_IMAGE_NAME"
          docker push $DOCKER_REPO:latest
          docker push $DOCKER_REPO:${{ github.run_id }}
        shell: bash -l {0}
